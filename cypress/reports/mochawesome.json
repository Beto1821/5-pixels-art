{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-03-22T13:58:52.070Z",
    "end": "2022-03-22T14:00:18.885Z",
    "duration": 86815,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7b9ce500-7428-4d58-ba9a-974af43d24ff",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8ec6055c-77b0-4734-9dfb-298867f0ce74",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 313,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "9d0d0963-08b3-4501-ad3d-f9c10113703e",
              "parentUUID": "8ec6055c-77b0-4734-9dfb-298867f0ce74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d0d0963-08b3-4501-ad3d-f9c10113703e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 313,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d0c7c7de-fd8c-4a30-9b11-a912881a5e31",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "d7bcf7d7-3864-4e8d-adf3-f349e58669e0",
              "parentUUID": "d0c7c7de-fd8c-4a30-9b11-a912881a5e31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 314,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "c80e5a0d-c918-4083-8f8c-cc4f0264af72",
              "parentUUID": "d0c7c7de-fd8c-4a30-9b11-a912881a5e31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "22a2617d-8ff2-4506-9bc0-c1998035687b",
              "parentUUID": "d0c7c7de-fd8c-4a30-9b11-a912881a5e31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "19b38ffb-ce01-4960-be92-dfeda226ce8b",
              "parentUUID": "d0c7c7de-fd8c-4a30-9b11-a912881a5e31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "37532374-b86f-4907-a63c-a5814a690464",
              "parentUUID": "d0c7c7de-fd8c-4a30-9b11-a912881a5e31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "6ecc0dc3-2e35-4e37-b02e-8d0b02e94e60",
              "parentUUID": "d0c7c7de-fd8c-4a30-9b11-a912881a5e31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "a6f452c1-3409-4cb4-9fed-20f4bd400f2e",
              "parentUUID": "d0c7c7de-fd8c-4a30-9b11-a912881a5e31",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7bcf7d7-3864-4e8d-adf3-f349e58669e0",
            "c80e5a0d-c918-4083-8f8c-cc4f0264af72",
            "22a2617d-8ff2-4506-9bc0-c1998035687b",
            "19b38ffb-ce01-4960-be92-dfeda226ce8b",
            "37532374-b86f-4907-a63c-a5814a690464",
            "6ecc0dc3-2e35-4e37-b02e-8d0b02e94e60",
            "a6f452c1-3409-4cb4-9fed-20f4bd400f2e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1529,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "17bd5916-4ba3-430a-bc6f-a3c040ac747f",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "cfc92c24-ba12-4f89-8f73-90891f608b05",
              "parentUUID": "17bd5916-4ba3-430a-bc6f-a3c040ac747f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 293,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "b4e16b7f-58a6-4c31-ab0d-da92ab382123",
              "parentUUID": "17bd5916-4ba3-430a-bc6f-a3c040ac747f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cfc92c24-ba12-4f89-8f73-90891f608b05",
            "b4e16b7f-58a6-4c31-ab0d-da92ab382123"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "34fc0cfb-b038-41a3-b514-9975dedb34ca",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "498ee87a-1f20-4a32-87d5-c8a76c0d7a34",
              "parentUUID": "34fc0cfb-b038-41a3-b514-9975dedb34ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "3a1df75d-0870-4c31-8345-a22535070831",
              "parentUUID": "34fc0cfb-b038-41a3-b514-9975dedb34ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "0d534176-ac69-4aeb-a64e-e51438a3c766",
              "parentUUID": "34fc0cfb-b038-41a3-b514-9975dedb34ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "475c39fc-55d5-4606-8348-f0b3d5cfc3f5",
              "parentUUID": "34fc0cfb-b038-41a3-b514-9975dedb34ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "498ee87a-1f20-4a32-87d5-c8a76c0d7a34",
            "3a1df75d-0870-4c31-8345-a22535070831",
            "0d534176-ac69-4aeb-a64e-e51438a3c766",
            "475c39fc-55d5-4606-8348-f0b3d5cfc3f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 824,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4e4adc39-5871-4c9c-9f91-05d8653d63fa",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "6ee94f0a-5e03-488f-b864-80bb46e13822",
              "parentUUID": "4e4adc39-5871-4c9c-9f91-05d8653d63fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "2cf6053b-238b-42e6-a69f-7416e823f92d",
              "parentUUID": "4e4adc39-5871-4c9c-9f91-05d8653d63fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ee94f0a-5e03-488f-b864-80bb46e13822",
            "2cf6053b-238b-42e6-a69f-7416e823f92d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 950,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4c427cfa-b28f-46cc-953a-e684257f029f",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 264,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "7fdf3877-82cb-4f16-befe-f30965e2cdfb",
              "parentUUID": "4c427cfa-b28f-46cc-953a-e684257f029f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "16f64910-7170-4d4b-beeb-5ef15d98b3a7",
              "parentUUID": "4c427cfa-b28f-46cc-953a-e684257f029f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7fdf3877-82cb-4f16-befe-f30965e2cdfb",
            "16f64910-7170-4d4b-beeb-5ef15d98b3a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 378,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e58d8ad0-429e-426d-974f-20e7ec7af54c",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 532,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "b1fcb3d0-2d3b-4ae3-9299-b0e0e727ec45",
              "parentUUID": "e58d8ad0-429e-426d-974f-20e7ec7af54c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8623,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "93afb631-2f8a-4539-873d-7301767ab195",
              "parentUUID": "e58d8ad0-429e-426d-974f-20e7ec7af54c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1fcb3d0-2d3b-4ae3-9299-b0e0e727ec45",
            "93afb631-2f8a-4539-873d-7301767ab195"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9155,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b29b804f-cae9-4371-ac17-9dd7dde8e308",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "0af47159-dbc9-4038-b306-de22ba5ec7a2",
              "parentUUID": "b29b804f-cae9-4371-ac17-9dd7dde8e308",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8596,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "2b08f3eb-871a-4c11-8d9f-1033b538a221",
              "parentUUID": "b29b804f-cae9-4371-ac17-9dd7dde8e308",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1791,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "49fa28bd-ad4a-41fa-81c4-c9af542a75d0",
              "parentUUID": "b29b804f-cae9-4371-ac17-9dd7dde8e308",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0af47159-dbc9-4038-b306-de22ba5ec7a2",
            "2b08f3eb-871a-4c11-8d9f-1033b538a221",
            "49fa28bd-ad4a-41fa-81c4-c9af542a75d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12647,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7b958138-61e6-4999-94e3-47714c13fd8a",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "627ab7d3-a53f-4830-b719-0b4577ade454",
              "parentUUID": "7b958138-61e6-4999-94e3-47714c13fd8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "3f11df2c-e0d8-448b-87e7-b76d90f012b6",
              "parentUUID": "7b958138-61e6-4999-94e3-47714c13fd8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "56c2054b-09d3-4787-ba7b-f0cba4d0ff32",
              "parentUUID": "7b958138-61e6-4999-94e3-47714c13fd8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "870812b0-60e8-45de-b3a1-bb769131f5d5",
              "parentUUID": "7b958138-61e6-4999-94e3-47714c13fd8a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "627ab7d3-a53f-4830-b719-0b4577ade454",
            "3f11df2c-e0d8-448b-87e7-b76d90f012b6",
            "56c2054b-09d3-4787-ba7b-f0cba4d0ff32",
            "870812b0-60e8-45de-b3a1-bb769131f5d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2972,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0c318c5d-90c3-4349-8865-7e4eeb92dd04",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4457,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33355/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33355/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33355/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33355/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33355/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ecadb684-e3e3-45b5-9e1c-51801f434beb",
              "parentUUID": "0c318c5d-90c3-4349-8865-7e4eeb92dd04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4419,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33355/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33355/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33355/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33355/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33355/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "31b36fe7-1453-48d2-813d-2cdefad10fc4",
              "parentUUID": "0c318c5d-90c3-4349-8865-7e4eeb92dd04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4602,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33355/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33355/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33355/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33355/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33355/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "524aad8f-0cde-4339-afe0-bae6f2536b18",
              "parentUUID": "0c318c5d-90c3-4349-8865-7e4eeb92dd04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4527,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33355/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33355/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33355/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33355/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33355/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "90f41dda-ac53-493b-9bb6-becbdd1a4f26",
              "parentUUID": "0c318c5d-90c3-4349-8865-7e4eeb92dd04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4563,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33355/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33355/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33355/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33355/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33355/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "61ee29df-cac3-4aeb-aa73-6eac339f07d4",
              "parentUUID": "0c318c5d-90c3-4349-8865-7e4eeb92dd04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4481,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33355/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33355/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33355/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33355/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33355/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a30d635f-e38f-4f31-9dec-0d8aa56aac88",
              "parentUUID": "0c318c5d-90c3-4349-8865-7e4eeb92dd04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4403,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33355/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33355/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33355/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33355/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33355/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b7aaf8e3-bb0e-48f1-83ab-47023eb64539",
              "parentUUID": "0c318c5d-90c3-4349-8865-7e4eeb92dd04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4648,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33355/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33355/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33355/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33355/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33355/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b329861f-a494-4787-ae1b-e7b4dd087f36",
              "parentUUID": "0c318c5d-90c3-4349-8865-7e4eeb92dd04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4454,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33355/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33355/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33355/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33355/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33355/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "28f2f828-d697-4a4a-ad5f-4901fd8f1675",
              "parentUUID": "0c318c5d-90c3-4349-8865-7e4eeb92dd04",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ecadb684-e3e3-45b5-9e1c-51801f434beb",
            "31b36fe7-1453-48d2-813d-2cdefad10fc4",
            "524aad8f-0cde-4339-afe0-bae6f2536b18",
            "90f41dda-ac53-493b-9bb6-becbdd1a4f26",
            "61ee29df-cac3-4aeb-aa73-6eac339f07d4",
            "a30d635f-e38f-4f31-9dec-0d8aa56aac88",
            "b7aaf8e3-bb0e-48f1-83ab-47023eb64539",
            "b329861f-a494-4787-ae1b-e7b4dd087f36",
            "28f2f828-d697-4a4a-ad5f-4901fd8f1675"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40554,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3d09b132-bb94-40e9-aaf9-bbf3589d216f",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4670,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33355/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33355/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33355/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33355/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33355/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8c8e67a7-aa02-4ed0-ae14-9bd4cbb63fe2",
              "parentUUID": "3d09b132-bb94-40e9-aaf9-bbf3589d216f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4600,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33355/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33355/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33355/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33355/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33355/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d4a2c848-1ce2-4ee1-8703-34e166f89a56",
              "parentUUID": "3d09b132-bb94-40e9-aaf9-bbf3589d216f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4441,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33355/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33355/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33355/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33355/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33355/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33355/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6f867bb7-d34c-4036-89ea-ef37eb10f8e5",
              "parentUUID": "3d09b132-bb94-40e9-aaf9-bbf3589d216f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8c8e67a7-aa02-4ed0-ae14-9bd4cbb63fe2",
            "d4a2c848-1ce2-4ee1-8703-34e166f89a56",
            "6f867bb7-d34c-4036-89ea-ef37eb10f8e5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13711,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c6ad226a-62bf-4a13-b968-0b855597ff87",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 633,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33355/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33355/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33355/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33355/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33355/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33355/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33355/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "4bfb8300-e2f2-429e-a07b-8ebd316d461c",
              "parentUUID": "c6ad226a-62bf-4a13-b968-0b855597ff87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 971,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33355/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33355/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33355/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33355/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33355/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33355/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33355/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33355/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33355/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33355/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33355/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33355/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "87d33743-c38e-4187-9bd2-8bfb88e80f63",
              "parentUUID": "c6ad226a-62bf-4a13-b968-0b855597ff87",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4bfb8300-e2f2-429e-a07b-8ebd316d461c",
            "87d33743-c38e-4187-9bd2-8bfb88e80f63"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1604,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}